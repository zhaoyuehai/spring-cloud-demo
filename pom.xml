<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <!-- groupId: groupId:项目或者组织的唯一标志，并且配置时生成的路径也是由此生成，如com.yuehai.demo生成的相对路径为：/com/yuehai/demo -->
    <groupId>com.yuehai.demo</groupId>
    <!-- artifactId: 项目的通用名称 -->
    <artifactId>yuehai-demo</artifactId>
    <!-- packaging: 打包的机制，如pom, jar, maven-plugin, ejb, war, ear, rar, par   -->
    <packaging>pom</packaging>
    <!-- version:项目的版本 SNAPSHOT：开发/不稳定版本，RELEASE：发布版本，LATEST：最新发布版本-->
    <version>1.0.0-SNAPSHOT</version>

    <!-- 项目的名称， Maven 产生的文档用 -->
    <name>yuehai-demo</name>
    <!-- 哪个网站可以找到这个项目,提示如果 Maven 资源列表没有，可以直接上该网站寻找, Maven 产生的文档用 -->
    <url>www.zhaoyuehai.com</url>
    <!-- 项目的描述, Maven 产生的文档用 -->
    <description>SpringCloud Demo</description>

    <!-- 开发者信息 -->
    <developers>
        <developer>
            <name>zhaoyuehai</name>
            <email>zhaoyuehai5282@163.com</email>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <spring-boot.version>2.1.1.RELEASE</spring-boot.version>
        <spring-cloud.version>Finchley.SR1</spring-cloud.version>
        <yuehai.demo.facade.version>1.0.0-RELEASE</yuehai.demo.facade.version>
        <lombok.version>1.18.4</lombok.version>
    </properties>

    <!--https://docs.spring.io/spring-boot/docs/2.1.1.RELEASE/reference/htmlsingle/#using-boot-maven-parent-pom-->
    <!--To configure your project to inherit from the spring-boot-starter-parent, set the parent as follows:-->
    <!--<parent>-->
    <!--<groupId>org.springframework.boot</groupId>-->
    <!--<artifactId>spring-boot-starter-parent</artifactId>-->
    <!--<version>2.1.1.RELEASE</version>-->
    <!--</parent>-->

    <dependencyManagement>
        <dependencies>
            <!-- https://docs.spring.io/spring-boot/docs/2.1.1.RELEASE/reference/htmlsingle/#using-boot-maven-parent-pom-->
            <!--Using Spring Boot without the Parent POM:-->
            <!--Not everyone likes inheriting from the spring-boot-starter-parent POM. You may have your own corporate standard parent that you need to use or you may prefer to explicitly declare all your Maven configuration.-->
            <!--If you do not want to use the spring-boot-starter-parent, you can still keep the benefit of the dependency management (but not the plugin management) by using a scope=import dependency-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type><!--须是pom,不然就是以jar方式引入-->
                <scope>import</scope><!--须是import，因为需要相关的依赖版本环境-->
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type><!--须是pom,不然就是以jar方式引入-->
                <scope>import</scope><!--须是import，因为需要相关的依赖版本环境-->
            </dependency>
            <dependency>
                <groupId>com.yuehai.demo</groupId>
                <artifactId>yuehai-demo-facade</artifactId>
                <version>${yuehai.demo.facade.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <!-- maven proxy, 本地仓库，替代 maven.apache.org 网站 jar 列表，用户下载时，首先寻找该站点如资源找到，则下载。否则才去 jar 列表网站。对多人团队，可节省下载速度和个人存储空间。 -->
    <!--<repositories>-->
    <!--<repository>-->
    <!--<id>xxx</id>-->
    <!--<name>xxx</name>-->
    <!--<url>http://xxxxxxxx/repository/</url>-->
    <!--<layout>xxx</layout>-->
    <!--</repository>-->
    <!--</repositories>-->

    <modules>
        <module>yuehai-demo-facade</module>
        <module>yuehai-demo-consumer</module>
        <module>yuehai-demo-eureka</module>
        <module>yuehai-demo-provider</module>
        <module>yuehai-demo-security</module>
    </modules>

</project>